ifndef __gmel_py2_included
__gmel_py2_included := 1

.PHONY: gmel_py2.so

load gmel_py2.so

$(call py_initialize)

define __gmel_py2_pycall_wrapper_cmd :=
import collections
def gmel_pycall_wrapper(result):
    if result is None:
        return
    if isinstance(result, str):
        return result
    if isinstance(result, unicode):
        return result.encode('utf-8')
    if isinstance(result, (int, long)):
        return str(result)
    if isinstance(result, collections.Iterable):
        result = (gmel_pycall_wrapper(item) for item in result)
        return ' '.join(item for item in result if item is not None).strip()
    raise RuntimeError('Unexpected type %s as result of function call', type(result))
endef
$(py_eval $(__gmel_py2_pycall_wrapper_cmd))
$(undefine __gmel_py2_pycall_wrapper_cmd)

endif # __gmel_py2_included
